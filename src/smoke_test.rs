#[cfg(test)]
mod tests {
    use crate::ml_kem_512;

    #[test]
    fn smoke_keygen_ek_512() {
        // https://github.com/pablotron/fips203ipd/blob/main/fips203ipd.c#L3911
        let seed = [0u8; 32];
        let exp_ek = [
            0x12, 0xba, 0x8d, 0xea, 0x4c, 0x7f, 0xf2, 0xf5, 0x02, 0xdd, 0x67, 0x9c, 0xc8, 0x01,
            0x60, 0xef, 0xdc, 0x76, 0x06, 0xb2, 0x64, 0x2f, 0x85, 0xac, 0xed, 0xa0, 0xcf, 0xdf,
            0xb8, 0x0b, 0x7a, 0x41, 0x6f, 0x55, 0xf2, 0xb1, 0x96, 0x2b, 0x47, 0x03, 0x1c, 0xca,
            0x43, 0xc0, 0x8d, 0x82, 0x40, 0x58, 0xfb, 0x45, 0x84, 0x34, 0xb1, 0x24, 0x32, 0xd5,
            0x97, 0xc5, 0x74, 0x18, 0x0d, 0x91, 0x0d, 0x8a, 0x25, 0x31, 0xee, 0x0a, 0x43, 0xf4,
            0x33, 0x9c, 0x77, 0x74, 0x0f, 0x36, 0x24, 0xa0, 0x0a, 0x93, 0x6b, 0x64, 0x5b, 0x1d,
            0x54, 0x92, 0x10, 0xd4, 0x53, 0x81, 0x9e, 0x0c, 0x4a, 0xcd, 0x2c, 0x4d, 0x77, 0x70,
            0x14, 0xde, 0x98, 0xcd, 0x98, 0x1a, 0xa0, 0x00, 0x3b, 0x01, 0x5c, 0x33, 0x98, 0xad,
            0x77, 0x60, 0x06, 0x28, 0x4a, 0xba, 0x49, 0x41, 0x7a, 0x53, 0x51, 0xd0, 0xc5, 0x6a,
            0x70, 0x9a, 0x4d, 0x05, 0x5a, 0x77, 0x47, 0x06, 0x8f, 0xe6, 0x60, 0x45, 0x42, 0xf6,
            0x73, 0x22, 0xd8, 0x59, 0x99, 0x2a, 0x34, 0x71, 0x50, 0xab, 0x9a, 0x39, 0x22, 0x7e,
            0x4b, 0xa2, 0xc9, 0xe8, 0x2e, 0xd8, 0xca, 0x60, 0xad, 0xbb, 0xbb, 0xf5, 0xa9, 0x08,
            0xd3, 0x67, 0xa8, 0x9a, 0x1a, 0x39, 0xd4, 0xf6, 0x2b, 0x21, 0x82, 0x9a, 0x01, 0xf4,
            0x4b, 0x22, 0xa7, 0x56, 0x2c, 0xfc, 0x8d, 0xe2, 0xbc, 0x0a, 0xeb, 0xa8, 0x5e, 0xcf,
            0x90, 0x4f, 0x82, 0x70, 0xa1, 0x08, 0x6a, 0xaa, 0x25, 0x80, 0x43, 0xa1, 0xb6, 0x89,
            0xd3, 0xe9, 0x56, 0x24, 0x95, 0x36, 0x7e, 0xd0, 0x55, 0xd6, 0x60, 0x7c, 0x48, 0x0c,
            0x38, 0x9a, 0x38, 0x04, 0xa0, 0x01, 0x56, 0xd8, 0x10, 0x50, 0x1d, 0xc5, 0x87, 0x13,
            0x4c, 0x1a, 0xf3, 0x15, 0x75, 0x78, 0xb9, 0x51, 0x39, 0xf6, 0x56, 0xa9, 0x8b, 0x4c,
            0x95, 0x08, 0x08, 0x0f, 0x65, 0x8c, 0xf3, 0x11, 0x44, 0x4d, 0xb9, 0x25, 0x78, 0x51,
            0xbf, 0xee, 0xf1, 0x2c, 0x26, 0xa6, 0x6f, 0x79, 0x19, 0x54, 0xfd, 0xb5, 0xb7, 0xec,
            0x67, 0x55, 0x98, 0x5a, 0xb0, 0x06, 0x22, 0xa7, 0x8e, 0x7b, 0x6c, 0x9e, 0x9c, 0x94,
            0xf6, 0xd8, 0x30, 0xe3, 0x4c, 0x0e, 0x44, 0x17, 0x8a, 0x29, 0x37, 0x64, 0x65, 0x29,
            0xb1, 0x7b, 0x57, 0x74, 0x71, 0x29, 0x8d, 0x1d, 0x3b, 0x8e, 0x14, 0x60, 0x04, 0xdd,
            0xb0, 0x0c, 0xde, 0xba, 0x34, 0xda, 0x33, 0x15, 0x30, 0xd8, 0x6d, 0xca, 0x71, 0x3c,
            0xb2, 0x73, 0xb7, 0xe0, 0xc4, 0xae, 0x16, 0x26, 0x97, 0x1a, 0xe1, 0x32, 0xa4, 0xa6,
            0x18, 0x12, 0x62, 0x35, 0xd3, 0x33, 0x83, 0xd7, 0xe2, 0x69, 0xe1, 0xa2, 0x09, 0x99,
            0x12, 0xcc, 0xb5, 0xe9, 0x21, 0x80, 0x6b, 0xc3, 0x26, 0x42, 0x04, 0xb4, 0x94, 0x11,
            0x45, 0xec, 0x71, 0x2e, 0xe8, 0x71, 0x47, 0x58, 0x28, 0xa2, 0x08, 0x31, 0x05, 0x6a,
            0x5c, 0x5d, 0x49, 0xba, 0x77, 0xf3, 0x2b, 0xa1, 0xc3, 0x9c, 0xcd, 0x2c, 0xaa, 0xc8,
            0x37, 0x9b, 0x73, 0x17, 0x5d, 0xae, 0x40, 0x29, 0xe8, 0x30, 0x6b, 0x02, 0x04, 0xc7,
            0x3e, 0xe7, 0xa5, 0x36, 0x16, 0x52, 0x71, 0x22, 0xb3, 0xec, 0xdb, 0x2a, 0xe0, 0xd8,
            0xa7, 0xfe, 0x33, 0x23, 0x07, 0xe1, 0x5a, 0x7c, 0x50, 0xbd, 0x95, 0x40, 0x31, 0xbf,
            0x8b, 0x18, 0x13, 0x46, 0x13, 0x6a, 0xd1, 0xa4, 0x8b, 0xc7, 0x95, 0xdd, 0x69, 0xc0,
            0xab, 0xe4, 0x48, 0x38, 0x43, 0xb2, 0x00, 0x2d, 0x69, 0x40, 0x75, 0x22, 0x47, 0xa7,
            0x6e, 0x69, 0x85, 0x80, 0x11, 0x57, 0x34, 0x99, 0x07, 0x19, 0xe6, 0x6b, 0x7e, 0x49,
            0x8c, 0x5c, 0xab, 0x76, 0xc5, 0x2d, 0xc5, 0x5f, 0x1b, 0x75, 0xc8, 0xeb, 0x78, 0xc9,
            0x14, 0x39, 0xa6, 0x7c, 0x78, 0x85, 0xd0, 0xea, 0x68, 0xdf, 0x40, 0xc2, 0xb1, 0x21,
            0x39, 0xb9, 0x91, 0x39, 0x2a, 0xe8, 0x04, 0xdb, 0x53, 0x4f, 0x99, 0x65, 0x4c, 0xa3,
            0x7b, 0x60, 0xc2, 0xa8, 0x63, 0x98, 0xeb, 0x4d, 0x54, 0xfa, 0x98, 0x04, 0xc8, 0xc3,
            0x35, 0xa5, 0xcc, 0xde, 0xeb, 0x52, 0xa8, 0x10, 0x41, 0x27, 0x1b, 0xb0, 0xa8, 0xb4,
            0x48, 0xe8, 0xe1, 0x0b, 0x27, 0xb9, 0x03, 0xd3, 0xc9, 0x98, 0x8e, 0xc9, 0x4b, 0xbf,
            0x74, 0xb0, 0x20, 0xd7, 0x35, 0x32, 0xf6, 0xac, 0x32, 0x49, 0x25, 0xf4, 0x19, 0x40,
            0xc6, 0xf7, 0x23, 0xf9, 0xf8, 0x47, 0x54, 0x73, 0x8d, 0xae, 0x87, 0x40, 0xc0, 0x92,
            0x0f, 0x85, 0xe0, 0xaa, 0x31, 0x69, 0x69, 0x78, 0x18, 0x75, 0xa6, 0xbc, 0xbe, 0x6c,
            0x29, 0xbe, 0x01, 0xda, 0x65, 0x93, 0x12, 0xc0, 0xf6, 0xd8, 0x88, 0xee, 0xa8, 0xa5,
            0x65, 0x31, 0x5d, 0x7f, 0x01, 0x0a, 0x74, 0xe5, 0x35, 0x07, 0xf4, 0xb3, 0x41, 0xc7,
            0x0e, 0x38, 0x33, 0x9b, 0x30, 0x3b, 0x85, 0x92, 0x5a, 0x08, 0x96, 0x13, 0x9f, 0x7c,
            0x29, 0x3b, 0x07, 0x64, 0x06, 0x59, 0x18, 0x86, 0x75, 0xe1, 0xaf, 0xcd, 0x21, 0x91,
            0x40, 0xf0, 0x59, 0xce, 0x7a, 0x8e, 0xfa, 0x52, 0x77, 0x05, 0xb0, 0xb6, 0xcf, 0x82,
            0x99, 0x8a, 0xda, 0x37, 0x41, 0xdc, 0xb2, 0x97, 0x18, 0xad, 0x6f, 0x50, 0xba, 0x1d,
            0xf3, 0x4c, 0x42, 0x62, 0x5c, 0xd6, 0x91, 0xc4, 0xe5, 0x45, 0x3b, 0x76, 0x0a, 0xb3,
            0xae, 0xb2, 0x16, 0x5c, 0xeb, 0x4e, 0x2a, 0xf3, 0x5f, 0x77, 0xe0, 0x45, 0xb6, 0xd0,
            0x42, 0x5c, 0x91, 0x0d, 0x7b, 0xc2, 0x76, 0x85, 0xf4, 0x3b, 0x49, 0xc7, 0xbc, 0x6f,
            0x53, 0x20, 0x3d, 0xe1, 0x23, 0xef, 0xc7, 0x20, 0x50, 0xd0, 0x4d, 0x27, 0xcb, 0x33,
            0x68, 0xcc, 0x3d, 0x7a, 0xe4, 0x3d, 0x8d, 0x76, 0x18, 0xeb, 0xa4, 0x19, 0xad, 0x56,
            0xc3, 0x5c, 0xab, 0x50, 0x63, 0xb9, 0xe7, 0xea, 0x56, 0x83, 0x14, 0xec, 0x81, 0xc4,
            0x0b, 0xa5, 0x77, 0xaa, 0xe6, 0x30, 0xde, 0x90, 0x20, 0x04, 0x00, 0x9e, 0x88, 0xf1,
            0x8d, 0xa5,
        ];

        // Alice runs KeyGen, and serializes ek for Bob (to bytes)
        let (alice_ek, _alice_dk) = ml_kem_512::key_gen_test(&seed);
        let alice_ek_bytes = alice_ek.to_bytes();

        assert_eq!(exp_ek, alice_ek_bytes, "\nExp {:02X?}\nAct {:02X?}", &exp_ek, &alice_ek_bytes);
    }


    #[test]
    fn smoke_keygen_dk_512() {
        // https://github.com/pablotron/fips203ipd/blob/main/fips203ipd.c#L3981
        let seed = [0u8; 32];
        let exp_dk = [
            0x32, 0xc1, 0x88, 0xba, 0x73, 0xc2, 0x08, 0x03, 0x25, 0xdb, 0x40, 0x3b, 0xf0, 0xf7,
            0x16, 0x01, 0x02, 0x77, 0x6c, 0x47, 0x11, 0x34, 0x0a, 0x1a, 0xb4, 0x86, 0x2f, 0x2a,
            0x10, 0x2f, 0xcd, 0x4a, 0xa1, 0x39, 0xc7, 0xcf, 0xf9, 0xf1, 0xbe, 0xc4, 0x33, 0x44,
            0x01, 0x90, 0x6e, 0x38, 0x84, 0x46, 0x3e, 0x94, 0x23, 0x0f, 0xdb, 0x1c, 0xd3, 0xb7,
            0x77, 0x26, 0x33, 0x61, 0x3c, 0x49, 0xb2, 0x02, 0x00, 0xa6, 0x9e, 0x30, 0x60, 0x34,
            0x21, 0x58, 0x54, 0x67, 0x70, 0x15, 0x31, 0x4a, 0xe9, 0xd5, 0x93, 0x8b, 0xa9, 0xb8,
            0xa7, 0x81, 0xaf, 0x31, 0x81, 0x08, 0x92, 0x59, 0x54, 0x3d, 0x85, 0xac, 0x50, 0x37,
            0x89, 0x0d, 0x33, 0x43, 0x01, 0xe7, 0x75, 0xec, 0x63, 0x1d, 0x3b, 0x45, 0x6f, 0x14,
            0x07, 0x02, 0x6e, 0x74, 0xbe, 0x8e, 0x77, 0x40, 0x7c, 0x99, 0xcb, 0xc6, 0x58, 0xa3,
            0x5d, 0x3b, 0x17, 0xb1, 0x36, 0x21, 0xf9, 0x26, 0x62, 0xb9, 0x60, 0xb4, 0x0d, 0x1b,
            0xc1, 0x4a, 0x23, 0x48, 0x8c, 0xf8, 0xa3, 0xe4, 0x79, 0xc8, 0x37, 0x62, 0x56, 0xea,
            0xc4, 0x0a, 0xed, 0x45, 0x43, 0x68, 0x5a, 0x61, 0x2b, 0x87, 0x7b, 0xa6, 0x72, 0xba,
            0x16, 0xbc, 0x3f, 0xd0, 0xa9, 0x4d, 0x89, 0xe2, 0xc9, 0x33, 0xf8, 0x23, 0xa1, 0xa9,
            0x69, 0x9f, 0xf7, 0xb6, 0x97, 0x9b, 0x6d, 0x2d, 0x33, 0x8e, 0xc8, 0x32, 0x93, 0xea,
            0x49, 0x96, 0x5b, 0x02, 0x56, 0x65, 0x99, 0x1b, 0x4c, 0x07, 0xa9, 0x6d, 0x19, 0x56,
            0x2b, 0xb3, 0x92, 0xea, 0xbc, 0xa8, 0x44, 0x72, 0x7c, 0x7f, 0xe9, 0x57, 0xdb, 0x97,
            0xb0, 0x84, 0x09, 0xb9, 0xff, 0xb8, 0xcd, 0xce, 0x57, 0x44, 0xc7, 0xdc, 0xbe, 0xc7,
            0xe4, 0x62, 0xba, 0x96, 0xae, 0xf4, 0xb7, 0xa9, 0xc6, 0x2a, 0xae, 0x58, 0x07, 0xbc,
            0xe5, 0xdb, 0x5b, 0x10, 0x76, 0x94, 0x38, 0x78, 0x40, 0x50, 0x34, 0x19, 0x1a, 0x4b,
            0x55, 0x19, 0xa1, 0xc1, 0x8b, 0xa2, 0x99, 0x1a, 0xa8, 0x49, 0x64, 0x16, 0xa5, 0xab,
            0xf0, 0x41, 0xdd, 0x78, 0x4e, 0x27, 0xf9, 0x9e, 0xdd, 0x9b, 0xc4, 0x6c, 0x46, 0x4e,
            0x68, 0xc8, 0x15, 0x73, 0xe0, 0x9b, 0x85, 0xe4, 0x57, 0x64, 0x30, 0xb9, 0x56, 0x51,
            0x6b, 0x04, 0x80, 0x15, 0x66, 0x3a, 0xbb, 0x5b, 0x08, 0x08, 0x42, 0x34, 0x90, 0xcc,
            0x1a, 0x0d, 0x4b, 0x61, 0x6d, 0x11, 0x8a, 0xac, 0x32, 0xc7, 0xbc, 0x77, 0x81, 0x67,
            0x4e, 0x98, 0x6c, 0x99, 0xa7, 0x3e, 0x3d, 0xea, 0xce, 0x4d, 0x15, 0x1a, 0x15, 0x24,
            0xba, 0x6a, 0x65, 0x15, 0x7c, 0x82, 0x68, 0xbe, 0x2a, 0x0d, 0x1c, 0xf5, 0xba, 0x00,
            0x91, 0x66, 0xb3, 0x29, 0x19, 0x2e, 0x9c, 0x89, 0x19, 0x53, 0x3e, 0xc0, 0x7c, 0x4e,
            0x55, 0x7a, 0x19, 0x5e, 0xe7, 0x55, 0xbe, 0x47, 0x91, 0x27, 0x85, 0x6d, 0x9c, 0x4a,
            0x14, 0x3a, 0xa8, 0x07, 0xb7, 0x6a, 0x82, 0xa6, 0xf9, 0xa8, 0x0f, 0x51, 0xbd, 0x5d,
            0x96, 0xb9, 0x1a, 0x20, 0x94, 0xe4, 0x30, 0xc1, 0x23, 0x06, 0x13, 0x38, 0xd1, 0x05,
            0xa6, 0x01, 0x76, 0x38, 0x0a, 0x71, 0x05, 0x6b, 0xaa, 0xc2, 0xcc, 0x12, 0xd9, 0x08,
            0xb7, 0x95, 0xac, 0x95, 0xff, 0xcb, 0x7f, 0x1e, 0x48, 0x09, 0x3f, 0x81, 0x0a, 0xfa,
            0x10, 0x3b, 0xb1, 0x0a, 0x11, 0x3b, 0x34, 0x3a, 0x98, 0xeb, 0x66, 0x98, 0x70, 0x09,
            0xe4, 0x02, 0x57, 0xbb, 0xc5, 0x6b, 0x80, 0xe3, 0xc0, 0x6b, 0x78, 0x2a, 0x8a, 0xc4,
            0x70, 0x99, 0x66, 0xb8, 0x9f, 0x11, 0x65, 0x34, 0x49, 0x3c, 0x99, 0x0b, 0x88, 0x00,
            0x10, 0x09, 0xbd, 0xd5, 0x7d, 0x03, 0x89, 0xa2, 0xd7, 0x77, 0xa3, 0x3f, 0x1c, 0xc3,
            0x08, 0x6c, 0x26, 0xc8, 0xd9, 0x71, 0xe6, 0x36, 0x93, 0x3c, 0x63, 0x56, 0xdc, 0xf8,
            0xbb, 0x08, 0x23, 0x02, 0x5a, 0x99, 0x51, 0xc1, 0xf1, 0x3a, 0x0b, 0x0a, 0x59, 0x67,
            0xd1, 0xb4, 0x04, 0xb4, 0x9a, 0x2c, 0x7a, 0xa7, 0xfd, 0x0c, 0x4c, 0x31, 0x13, 0x8a,
            0x3c, 0x6b, 0x53, 0x49, 0x04, 0x6e, 0x2f, 0x7a, 0x44, 0x8c, 0x35, 0x00, 0xcf, 0x5c,
            0xb3, 0x54, 0x87, 0x36, 0x71, 0x60, 0xa8, 0x49, 0xf7, 0x99, 0x53, 0x00, 0x83, 0x9c,
            0x72, 0x1c, 0xd6, 0x5b, 0xaa, 0x2f, 0x73, 0x80, 0xb6, 0x2c, 0x26, 0xb4, 0xc5, 0x8f,
            0x23, 0x7a, 0x51, 0x49, 0xb9, 0xba, 0x7d, 0x59, 0x52, 0xce, 0x25, 0x69, 0x6f, 0x04,
            0xb9, 0xd0, 0x96, 0x1d, 0x15, 0x88, 0x1b, 0x48, 0x86, 0xc9, 0xe8, 0xc6, 0xa2, 0xee,
            0x23, 0x08, 0x31, 0x0c, 0xbc, 0xa7, 0x03, 0x52, 0x08, 0x53, 0xc7, 0xbd, 0x78, 0x5a,
            0x4c, 0x78, 0x3e, 0xc2, 0xfb, 0xc6, 0xdc, 0x19, 0x5f, 0x64, 0x16, 0x54, 0x10, 0xf3,
            0x36, 0x6b, 0x63, 0x68, 0x00, 0xc7, 0xcb, 0x5e, 0xe4, 0x1d, 0x2f, 0xbc, 0x69, 0x5b,
            0x02, 0x75, 0xfa, 0x79, 0x8c, 0x35, 0x16, 0x67, 0x20, 0x5a, 0x81, 0x05, 0x51, 0x23,
            0xaf, 0x7a, 0x94, 0x27, 0xec, 0x11, 0x09, 0xfb, 0x5f, 0x4e, 0x3b, 0x23, 0xc3, 0x6a,
            0x15, 0xf6, 0x40, 0x45, 0xb2, 0x50, 0x7b, 0x24, 0x18, 0x74, 0x4e, 0x63, 0x08, 0x31,
            0xb7, 0xc0, 0xfb, 0xd4, 0xbf, 0x4d, 0x43, 0x4f, 0x29, 0xd7, 0x7f, 0x54, 0xd4, 0x39,
            0x72, 0x3b, 0x32, 0x02, 0xb9, 0x9a, 0x4a, 0xe2, 0xaa, 0x5b, 0x1a, 0xa7, 0x92, 0xc1,
            0x2c, 0x57, 0x07, 0x70, 0xb0, 0x65, 0x16, 0x96, 0xea, 0x3c, 0xbe, 0xfb, 0x06, 0xc8,
            0x34, 0x8d, 0x5f, 0x25, 0x85, 0x2f, 0xfb, 0x33, 0xb5, 0xd6, 0x53, 0xc5, 0x29, 0x5c,
            0x99, 0x90, 0x73, 0xa8, 0x24, 0x66, 0xda, 0xc2, 0x30, 0x7a, 0xc8, 0x17, 0x12, 0xba,
            0x8d, 0xea, 0x4c, 0x7f, 0xf2, 0xf5, 0x02, 0xdd, 0x67, 0x9c, 0xc8, 0x01, 0x60, 0xef,
            0xdc, 0x76, 0x06, 0xb2, 0x64, 0x2f, 0x85, 0xac, 0xed, 0xa0, 0xcf, 0xdf, 0xb8, 0x0b,
            0x7a, 0x41, 0x6f, 0x55, 0xf2, 0xb1, 0x96, 0x2b, 0x47, 0x03, 0x1c, 0xca, 0x43, 0xc0,
            0x8d, 0x82, 0x40, 0x58, 0xfb, 0x45, 0x84, 0x34, 0xb1, 0x24, 0x32, 0xd5, 0x97, 0xc5,
            0x74, 0x18, 0x0d, 0x91, 0x0d, 0x8a, 0x25, 0x31, 0xee, 0x0a, 0x43, 0xf4, 0x33, 0x9c,
            0x77, 0x74, 0x0f, 0x36, 0x24, 0xa0, 0x0a, 0x93, 0x6b, 0x64, 0x5b, 0x1d, 0x54, 0x92,
            0x10, 0xd4, 0x53, 0x81, 0x9e, 0x0c, 0x4a, 0xcd, 0x2c, 0x4d, 0x77, 0x70, 0x14, 0xde,
            0x98, 0xcd, 0x98, 0x1a, 0xa0, 0x00, 0x3b, 0x01, 0x5c, 0x33, 0x98, 0xad, 0x77, 0x60,
            0x06, 0x28, 0x4a, 0xba, 0x49, 0x41, 0x7a, 0x53, 0x51, 0xd0, 0xc5, 0x6a, 0x70, 0x9a,
            0x4d, 0x05, 0x5a, 0x77, 0x47, 0x06, 0x8f, 0xe6, 0x60, 0x45, 0x42, 0xf6, 0x73, 0x22,
            0xd8, 0x59, 0x99, 0x2a, 0x34, 0x71, 0x50, 0xab, 0x9a, 0x39, 0x22, 0x7e, 0x4b, 0xa2,
            0xc9, 0xe8, 0x2e, 0xd8, 0xca, 0x60, 0xad, 0xbb, 0xbb, 0xf5, 0xa9, 0x08, 0xd3, 0x67,
            0xa8, 0x9a, 0x1a, 0x39, 0xd4, 0xf6, 0x2b, 0x21, 0x82, 0x9a, 0x01, 0xf4, 0x4b, 0x22,
            0xa7, 0x56, 0x2c, 0xfc, 0x8d, 0xe2, 0xbc, 0x0a, 0xeb, 0xa8, 0x5e, 0xcf, 0x90, 0x4f,
            0x82, 0x70, 0xa1, 0x08, 0x6a, 0xaa, 0x25, 0x80, 0x43, 0xa1, 0xb6, 0x89, 0xd3, 0xe9,
            0x56, 0x24, 0x95, 0x36, 0x7e, 0xd0, 0x55, 0xd6, 0x60, 0x7c, 0x48, 0x0c, 0x38, 0x9a,
            0x38, 0x04, 0xa0, 0x01, 0x56, 0xd8, 0x10, 0x50, 0x1d, 0xc5, 0x87, 0x13, 0x4c, 0x1a,
            0xf3, 0x15, 0x75, 0x78, 0xb9, 0x51, 0x39, 0xf6, 0x56, 0xa9, 0x8b, 0x4c, 0x95, 0x08,
            0x08, 0x0f, 0x65, 0x8c, 0xf3, 0x11, 0x44, 0x4d, 0xb9, 0x25, 0x78, 0x51, 0xbf, 0xee,
            0xf1, 0x2c, 0x26, 0xa6, 0x6f, 0x79, 0x19, 0x54, 0xfd, 0xb5, 0xb7, 0xec, 0x67, 0x55,
            0x98, 0x5a, 0xb0, 0x06, 0x22, 0xa7, 0x8e, 0x7b, 0x6c, 0x9e, 0x9c, 0x94, 0xf6, 0xd8,
            0x30, 0xe3, 0x4c, 0x0e, 0x44, 0x17, 0x8a, 0x29, 0x37, 0x64, 0x65, 0x29, 0xb1, 0x7b,
            0x57, 0x74, 0x71, 0x29, 0x8d, 0x1d, 0x3b, 0x8e, 0x14, 0x60, 0x04, 0xdd, 0xb0, 0x0c,
            0xde, 0xba, 0x34, 0xda, 0x33, 0x15, 0x30, 0xd8, 0x6d, 0xca, 0x71, 0x3c, 0xb2, 0x73,
            0xb7, 0xe0, 0xc4, 0xae, 0x16, 0x26, 0x97, 0x1a, 0xe1, 0x32, 0xa4, 0xa6, 0x18, 0x12,
            0x62, 0x35, 0xd3, 0x33, 0x83, 0xd7, 0xe2, 0x69, 0xe1, 0xa2, 0x09, 0x99, 0x12, 0xcc,
            0xb5, 0xe9, 0x21, 0x80, 0x6b, 0xc3, 0x26, 0x42, 0x04, 0xb4, 0x94, 0x11, 0x45, 0xec,
            0x71, 0x2e, 0xe8, 0x71, 0x47, 0x58, 0x28, 0xa2, 0x08, 0x31, 0x05, 0x6a, 0x5c, 0x5d,
            0x49, 0xba, 0x77, 0xf3, 0x2b, 0xa1, 0xc3, 0x9c, 0xcd, 0x2c, 0xaa, 0xc8, 0x37, 0x9b,
            0x73, 0x17, 0x5d, 0xae, 0x40, 0x29, 0xe8, 0x30, 0x6b, 0x02, 0x04, 0xc7, 0x3e, 0xe7,
            0xa5, 0x36, 0x16, 0x52, 0x71, 0x22, 0xb3, 0xec, 0xdb, 0x2a, 0xe0, 0xd8, 0xa7, 0xfe,
            0x33, 0x23, 0x07, 0xe1, 0x5a, 0x7c, 0x50, 0xbd, 0x95, 0x40, 0x31, 0xbf, 0x8b, 0x18,
            0x13, 0x46, 0x13, 0x6a, 0xd1, 0xa4, 0x8b, 0xc7, 0x95, 0xdd, 0x69, 0xc0, 0xab, 0xe4,
            0x48, 0x38, 0x43, 0xb2, 0x00, 0x2d, 0x69, 0x40, 0x75, 0x22, 0x47, 0xa7, 0x6e, 0x69,
            0x85, 0x80, 0x11, 0x57, 0x34, 0x99, 0x07, 0x19, 0xe6, 0x6b, 0x7e, 0x49, 0x8c, 0x5c,
            0xab, 0x76, 0xc5, 0x2d, 0xc5, 0x5f, 0x1b, 0x75, 0xc8, 0xeb, 0x78, 0xc9, 0x14, 0x39,
            0xa6, 0x7c, 0x78, 0x85, 0xd0, 0xea, 0x68, 0xdf, 0x40, 0xc2, 0xb1, 0x21, 0x39, 0xb9,
            0x91, 0x39, 0x2a, 0xe8, 0x04, 0xdb, 0x53, 0x4f, 0x99, 0x65, 0x4c, 0xa3, 0x7b, 0x60,
            0xc2, 0xa8, 0x63, 0x98, 0xeb, 0x4d, 0x54, 0xfa, 0x98, 0x04, 0xc8, 0xc3, 0x35, 0xa5,
            0xcc, 0xde, 0xeb, 0x52, 0xa8, 0x10, 0x41, 0x27, 0x1b, 0xb0, 0xa8, 0xb4, 0x48, 0xe8,
            0xe1, 0x0b, 0x27, 0xb9, 0x03, 0xd3, 0xc9, 0x98, 0x8e, 0xc9, 0x4b, 0xbf, 0x74, 0xb0,
            0x20, 0xd7, 0x35, 0x32, 0xf6, 0xac, 0x32, 0x49, 0x25, 0xf4, 0x19, 0x40, 0xc6, 0xf7,
            0x23, 0xf9, 0xf8, 0x47, 0x54, 0x73, 0x8d, 0xae, 0x87, 0x40, 0xc0, 0x92, 0x0f, 0x85,
            0xe0, 0xaa, 0x31, 0x69, 0x69, 0x78, 0x18, 0x75, 0xa6, 0xbc, 0xbe, 0x6c, 0x29, 0xbe,
            0x01, 0xda, 0x65, 0x93, 0x12, 0xc0, 0xf6, 0xd8, 0x88, 0xee, 0xa8, 0xa5, 0x65, 0x31,
            0x5d, 0x7f, 0x01, 0x0a, 0x74, 0xe5, 0x35, 0x07, 0xf4, 0xb3, 0x41, 0xc7, 0x0e, 0x38,
            0x33, 0x9b, 0x30, 0x3b, 0x85, 0x92, 0x5a, 0x08, 0x96, 0x13, 0x9f, 0x7c, 0x29, 0x3b,
            0x07, 0x64, 0x06, 0x59, 0x18, 0x86, 0x75, 0xe1, 0xaf, 0xcd, 0x21, 0x91, 0x40, 0xf0,
            0x59, 0xce, 0x7a, 0x8e, 0xfa, 0x52, 0x77, 0x05, 0xb0, 0xb6, 0xcf, 0x82, 0x99, 0x8a,
            0xda, 0x37, 0x41, 0xdc, 0xb2, 0x97, 0x18, 0xad, 0x6f, 0x50, 0xba, 0x1d, 0xf3, 0x4c,
            0x42, 0x62, 0x5c, 0xd6, 0x91, 0xc4, 0xe5, 0x45, 0x3b, 0x76, 0x0a, 0xb3, 0xae, 0xb2,
            0x16, 0x5c, 0xeb, 0x4e, 0x2a, 0xf3, 0x5f, 0x77, 0xe0, 0x45, 0xb6, 0xd0, 0x42, 0x5c,
            0x91, 0x0d, 0x7b, 0xc2, 0x76, 0x85, 0xf4, 0x3b, 0x49, 0xc7, 0xbc, 0x6f, 0x53, 0x20,
            0x3d, 0xe1, 0x23, 0xef, 0xc7, 0x20, 0x50, 0xd0, 0x4d, 0x27, 0xcb, 0x33, 0x68, 0xcc,
            0x3d, 0x7a, 0xe4, 0x3d, 0x8d, 0x76, 0x18, 0xeb, 0xa4, 0x19, 0xad, 0x56, 0xc3, 0x5c,
            0xab, 0x50, 0x63, 0xb9, 0xe7, 0xea, 0x56, 0x83, 0x14, 0xec, 0x81, 0xc4, 0x0b, 0xa5,
            0x77, 0xaa, 0xe6, 0x30, 0xde, 0x90, 0x20, 0x04, 0x00, 0x9e, 0x88, 0xf1, 0x8d, 0xa5,
            0x31, 0x52, 0xc9, 0x88, 0x45, 0xac, 0xbc, 0x16, 0x3d, 0x2f, 0x7a, 0xff, 0xd6, 0x5a,
            0x61, 0x7f, 0xb5, 0x99, 0x42, 0x62, 0xc1, 0xbd, 0x28, 0x31, 0xbf, 0xdc, 0xc1, 0x05,
            0x75, 0x2b, 0xb7, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ];

        // Alice runs KeyGen, and serializes ek for Bob (to bytes)
        let (_alice_ek, alice_dk) = ml_kem_512::key_gen_test(&seed);
        let alice_dk_bytes = alice_dk.to_bytes_test();

        assert_eq!(exp_dk, alice_dk_bytes, "\nExp {:02X?}\nAct {:02X?}", &exp_dk, &alice_dk_bytes);
    }


    #[test]
    fn smoke_keygen_ssk1_512() {
        // https://github.com/pablotron/fips203ipd/blob/main/fips203ipd.c#L4227C5-L4232C7
        let seed = [0u8; 32];
        let exp_ssk = [
            0xf3, 0x23, 0xa8, 0x77, 0x93, 0x95, 0xf0, 0xce, 0x4d, 0x25, 0xc2, 0x97, 0x97, 0x76,
            0x90, 0x44, 0xa7, 0x82, 0x84, 0xcd, 0x2e, 0xbf, 0xb9, 0xce, 0xd8, 0x16, 0xd2, 0xd0,
            0x1c, 0xeb, 0xe0, 0x24,
        ];

        // Alice runs KeyGen, and serializes ek for Bob (to bytes)
        let (alice_ek, _alice_dk) = ml_kem_512::key_gen_test(&seed);
        let (ssk, _ct) = alice_ek.encaps_test(&seed);
        let ssk_bytes = ssk.to_bytes();

        assert_eq!(exp_ssk, ssk_bytes, "\nExp {:02X?}\nAct {:02X?}", &exp_ssk, &ssk_bytes);
    }

    #[test]
    fn smoke_keygen_ct_512() {
        // https://github.com/pablotron/fips203ipd/blob/main/fips203ipd.c#L4234C5-L4300C6
        let seed = [0u8; 32];
        let exp_ct = [
            0x66, 0xe4, 0x06, 0xd6, 0xa1, 0x43, 0x49, 0x80, 0xe8, 0x92, 0xbe, 0x05, 0xfd, 0x4a,
            0xba, 0xce, 0x10, 0xb6, 0x34, 0xca, 0x97, 0x4d, 0xb4, 0x9b, 0x64, 0x33, 0x18, 0x28,
            0x7f, 0x84, 0x7b, 0x09, 0x89, 0x71, 0x15, 0x2b, 0xd5, 0x68, 0xed, 0x53, 0xf2, 0x37,
            0x2a, 0x43, 0x9f, 0x2e, 0x1f, 0x7b, 0xc8, 0x09, 0x46, 0x0d, 0x8a, 0xf8, 0xfa, 0x7e,
            0xad, 0x17, 0x75, 0x06, 0x6f, 0x03, 0x85, 0xd3, 0xa0, 0x3e, 0xc3, 0x34, 0x53, 0xdd,
            0x95, 0xcc, 0xc9, 0x15, 0xe7, 0x27, 0xae, 0x86, 0x1b, 0xe4, 0x0a, 0x99, 0x7e, 0x77,
            0x68, 0x3c, 0x68, 0x13, 0x41, 0x76, 0xb4, 0xcf, 0xcd, 0xe8, 0xa9, 0x72, 0x28, 0x03,
            0x83, 0xae, 0x5d, 0xab, 0x02, 0xa4, 0x17, 0x54, 0xae, 0x7e, 0xc1, 0x20, 0xf2, 0x5b,
            0xce, 0x34, 0xc9, 0x71, 0x0d, 0xe3, 0x2d, 0x71, 0x1f, 0x73, 0x6c, 0x40, 0x76, 0xa8,
            0xc8, 0x89, 0x63, 0xe8, 0x15, 0xd2, 0xb5, 0x5f, 0x3a, 0x95, 0x58, 0x71, 0xaf, 0xa7,
            0x8a, 0x27, 0x5a, 0x90, 0x62, 0xf6, 0xeb, 0x99, 0x48, 0xbb, 0xf8, 0xba, 0xb3, 0xe0,
            0x71, 0xec, 0xc2, 0x89, 0xb8, 0x5c, 0xe2, 0xc0, 0x94, 0x0e, 0x78, 0xcb, 0xbb, 0xb0,
            0xb6, 0x94, 0xea, 0xf7, 0x81, 0x51, 0xfc, 0xbd, 0x9c, 0xd1, 0x8e, 0x88, 0x3e, 0x0f,
            0x40, 0x2b, 0xb1, 0xf1, 0xd4, 0x3a, 0xd2, 0xa5, 0x7c, 0xa3, 0x03, 0x28, 0x89, 0xed,
            0xcd, 0xe9, 0x1a, 0x47, 0xd2, 0xd0, 0x5d, 0x81, 0xfa, 0x8c, 0x21, 0xd8, 0x91, 0xba,
            0x76, 0x22, 0x13, 0x2b, 0x8f, 0xac, 0x5e, 0x5e, 0x7e, 0x6d, 0xa1, 0x17, 0xfe, 0xdc,
            0xc8, 0xa5, 0xd3, 0x3a, 0xa2, 0xf3, 0x54, 0x0e, 0x89, 0x97, 0xf8, 0x52, 0xab, 0x82,
            0x13, 0x76, 0x4c, 0xda, 0x1a, 0xe0, 0x47, 0xb7, 0xa2, 0x28, 0xa1, 0xe4, 0x84, 0xf6,
            0x74, 0x3f, 0xd6, 0x78, 0x74, 0x10, 0x34, 0x8a, 0x8f, 0xc7, 0x48, 0xdd, 0x89, 0xd0,
            0xfc, 0xfd, 0x66, 0x3f, 0xea, 0xc7, 0xf5, 0x52, 0xb6, 0x86, 0x95, 0x96, 0xff, 0x12,
            0xb4, 0x61, 0xa7, 0xb5, 0xc8, 0x45, 0x7f, 0x60, 0xc4, 0x62, 0x86, 0x7f, 0x40, 0xdb,
            0x59, 0xeb, 0x33, 0xa4, 0x9a, 0x5f, 0x37, 0x74, 0x95, 0x57, 0xae, 0xb3, 0xfe, 0x1f,
            0xd2, 0xb0, 0x15, 0x87, 0x39, 0xb4, 0x0d, 0x71, 0x30, 0xf4, 0xc4, 0xd9, 0xbc, 0x8c,
            0x5e, 0x96, 0xab, 0x58, 0xe5, 0xd8, 0x4c, 0x0e, 0xe5, 0x6d, 0xf0, 0xc3, 0xb7, 0x7e,
            0x56, 0x07, 0xf7, 0xab, 0xe3, 0x66, 0xe1, 0x2f, 0x4b, 0x26, 0x32, 0x62, 0xae, 0xde,
            0x06, 0x75, 0x71, 0xea, 0x3a, 0x01, 0x95, 0x57, 0x83, 0x55, 0x0a, 0x6a, 0x8a, 0xf1,
            0xf3, 0x78, 0x14, 0x1b, 0x5c, 0x7c, 0x0f, 0x58, 0xcd, 0x5a, 0xca, 0xa8, 0x5e, 0x95,
            0x56, 0x35, 0x90, 0x4b, 0xf9, 0xb4, 0x88, 0x81, 0x6a, 0x88, 0x20, 0x18, 0x9a, 0x46,
            0xb2, 0x62, 0xc8, 0xd2, 0xf7, 0x5a, 0xdd, 0xac, 0x5a, 0x85, 0x62, 0x39, 0x73, 0x22,
            0x3b, 0x4d, 0x3f, 0xa5, 0x7c, 0xc5, 0xf2, 0xd2, 0xab, 0xbc, 0xef, 0x55, 0x1a, 0xd6,
            0x6c, 0xd9, 0xa0, 0xbf, 0x4a, 0xac, 0x79, 0x22, 0x27, 0xa3, 0xcf, 0x17, 0xd0, 0xc4,
            0x7c, 0xa6, 0xf7, 0x2d, 0x2a, 0x32, 0x2d, 0xf8, 0x68, 0xe3, 0x47, 0xe7, 0x56, 0x71,
            0xda, 0xd9, 0x39, 0xbb, 0x6a, 0x13, 0xf5, 0x54, 0xde, 0xdd, 0xb8, 0x8f, 0xdf, 0x1b,
            0xeb, 0xc8, 0xe8, 0x5a, 0x2d, 0x33, 0x04, 0x67, 0x3c, 0x25, 0x8b, 0x53, 0x36, 0x45,
            0xd5, 0x29, 0x89, 0xda, 0x8b, 0xa6, 0x9e, 0x5e, 0x0b, 0xba, 0xad, 0x8d, 0xa4, 0xb5,
            0xda, 0xf3, 0x6c, 0x1d, 0x6c, 0xc1, 0x99, 0xa3, 0x83, 0x9e, 0x32, 0x33, 0x69, 0xa8,
            0x19, 0x0c, 0x04, 0x88, 0x81, 0xf8, 0x50, 0x47, 0xac, 0x37, 0x2a, 0x7f, 0x6b, 0x70,
            0x8e, 0xe4, 0xce, 0x67, 0x53, 0x15, 0x8d, 0x5d, 0x7e, 0x40, 0x81, 0xf1, 0xdb, 0x5f,
            0xcd, 0x12, 0x6a, 0x14, 0x6e, 0x0f, 0xed, 0x9d, 0x94, 0x16, 0x47, 0xec, 0x4e, 0xd1,
            0x2a, 0xf8, 0xd1, 0xee, 0x58, 0xa1, 0x04, 0x66, 0xdd, 0x31, 0x00, 0x9d, 0xca, 0xa5,
            0x4e, 0x2a, 0x6e, 0x5c, 0x45, 0x63, 0xc9, 0xb7, 0x45, 0xa8, 0x30, 0x98, 0x54, 0x8e,
            0x6c, 0xcb, 0x15, 0x2b, 0xfc, 0x50, 0x14, 0x30, 0xbe, 0xa1, 0x95, 0xfb, 0x6e, 0xc1,
            0x56, 0x25, 0xd5, 0x32, 0xb4, 0x06, 0x98, 0xb4, 0xcc, 0x96, 0x90, 0x98, 0x80, 0xdb,
            0x1e, 0x0e, 0xc0, 0xfa, 0xcd, 0x02, 0x7f, 0xac, 0x68, 0x61, 0x9c, 0x41, 0x28, 0x24,
            0x26, 0xe8, 0x1e, 0x0e, 0x2d, 0x2e, 0x0f, 0xbb, 0x9f, 0x18, 0x3e, 0xca, 0x26, 0x95,
            0xc4, 0xc5, 0x86, 0x6d, 0xff, 0xbf, 0xfe, 0xa1, 0xed, 0x71, 0x37, 0x6f, 0x79, 0xf7,
            0x0f, 0xa9, 0xb8, 0x98, 0x9f, 0x99, 0x98, 0x02, 0x97, 0x73, 0xaf, 0xcd, 0x84, 0xcc,
            0x4d, 0xc9, 0x24, 0x80, 0x86, 0xcb, 0x68, 0xdf, 0xe9, 0x28, 0x30, 0xab, 0x1b, 0xa0,
            0x0d, 0xbb, 0xc5, 0x54, 0x62, 0xad, 0xf1, 0xa5, 0xa4, 0xea, 0x36, 0x76, 0xf6, 0xe1,
            0xcb, 0xc5, 0x76, 0x80, 0xb3, 0x0f, 0x3c, 0xe3, 0xcd, 0xa5, 0x90, 0x92, 0x28, 0x5a,
            0x9d, 0xf6, 0x2d, 0x54, 0xf6, 0x57, 0x38, 0x29, 0x1c, 0xa8, 0x2c, 0x14, 0xb9, 0xde,
            0x4a, 0xca, 0xc9, 0x06, 0xc9, 0xff, 0xac, 0x1f, 0x40, 0x85, 0xe1, 0x33, 0x37, 0x4a,
            0x5f, 0xd0, 0x9b, 0xec, 0xf5, 0x7f, 0x2d, 0x5d, 0x91, 0x91, 0x87, 0x99, 0x23, 0x54,
            0x0e, 0xbf, 0xb2, 0x30, 0x94, 0x8c, 0x4b, 0x03, 0x5d, 0xde, 0x98, 0xda, 0x75, 0xc3,
            0x37, 0x47, 0x00, 0x5b, 0xaa, 0xe3, 0xf4, 0x4e, 0x7f, 0x8f, 0x0a, 0xad,
        ];

        // Alice runs KeyGen, and serializes ek for Bob (to bytes)
        let (alice_ek, _alice_dk) = ml_kem_512::key_gen_test(&seed);
        let (_ssk, ct) = alice_ek.encaps_test(&seed);
        let ct_bytes = ct.to_bytes();

        assert_eq!(exp_ct, ct_bytes, "\nExp {:02X?}\nAct {:02X?}", &exp_ct, &ct_bytes);
    }

    #[test]
    fn smoke_keygen_ssk2_512() {
        // https://github.com/pablotron/fips203ipd/blob/main/fips203ipd.c#L4227C5-L4232C7
        let seed = [0u8; 32];
        let exp_ssk = [
            0xf3, 0x23, 0xa8, 0x77, 0x93, 0x95, 0xf0, 0xce, 0x4d, 0x25, 0xc2, 0x97, 0x97, 0x76,
            0x90, 0x44, 0xa7, 0x82, 0x84, 0xcd, 0x2e, 0xbf, 0xb9, 0xce, 0xd8, 0x16, 0xd2, 0xd0,
            0x1c, 0xeb, 0xe0, 0x24,
        ];

        // Alice runs KeyGen, and serializes ek for Bob (to bytes)
        let (alice_ek, alice_dk) = ml_kem_512::key_gen_test(&seed);
        let (ssk1, ct) = alice_ek.encaps_test(&seed);
        let ssk1_bytes = ssk1.to_bytes();
        let ssk2 = alice_dk.decaps(&ct);
        let ssk2_bytes = ssk2.to_bytes();

        assert_eq!(exp_ssk, ssk1_bytes, "\n1: Exp {:02X?}\n1: Act {:02X?}", &exp_ssk, &ssk1_bytes);
        assert_eq!(exp_ssk, ssk2_bytes, "\n2: Exp {:02X?}\n2: Act {:02X?}", &exp_ssk, &ssk2_bytes);
    }
}

// Alice sends ek bytes to Bob
// let bob_ek_bytes = alice_ek_bytes;
//
// // Bob deserializes ek bytes, runs Encaps, to get ssk and serializes ct for Alice (to bytes)
// let bob_ek = ml_kem_512::new_ek(bob_ek_bytes);
// let (bob_ssk_bytes, bob_ct) = bob_ek.encaps();
// let bob_ct_bytes = bob_ct.to_bytes();
//
// // Bob sends ct bytes to Alice
// let alice_ct_bytes = bob_ct_bytes;
//
// // Alice deserializes runs Decaps
// let alice_ct = ml_kem_512::new_ct(alice_ct_bytes);
// let alice_ssk_bytes = alice_dk.decaps(&alice_ct);
//
// // Each party obtains the same shared secret key
// assert_eq!(bob_ssk_bytes, alice_ssk_bytes)
